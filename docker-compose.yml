version: "3.8"

services:

  zookeeper:
    image: zookeeper:3.7.0
    container_name: zookeeper
    restart: on-failure
    ports:
      - '2182:2181'

  kafka:
    hostname: kafka
    image: wurstmeister/kafka:2.12-2.2.1
    container_name: kafka
    restart: on-failure
    ports:
      - '9092:9092'
    environment:
      KAFKA_ADVERTISED_HOST_NAME: kafka
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
    volumes:
      - 'kafka-data:/var/run/docker.sock:/var/run/docker.sock'

  tariffs-db:
    image: postgres:14.1-alpine
    container_name: tariffs-db
    restart: on-failure
    volumes:
      - 'tariffs-data:/var/lib/postgresql/data'
    environment:
      POSTGRES_USER: benik
      POSTGRES_PASSWORD: 123
      POSTGRES_DB: tariffs
    ports:
      - "5432:5432"

  products-db:
    image: postgres:14.1-alpine
    container_name: products-db
    restart: on-failure
    volumes:
      - 'products-data:/var/lib/postgresql/data'
    environment:
      POSTGRES_USER: benik
      POSTGRES_PASSWORD: 123
      POSTGRES_DB: products
    ports:
      - "5433:5432"

  backend-client-service:
    hostname: backend-client-service
    image: backend-client-service
    container_name: backend-client-service
    restart: on-failure
    depends_on:
      - products
      - tariffs
    environment:
      CLIENT_HOST: client-account
      CLIENT_PORT: 8080
      PRODUCTS_HOST: products
      PRODUCTS_PORT: 8081
      TARIFFS_HOST: tariffs
      TARIFFS_PORT: 8082
      AUTH_HOST: auth-valid-service
      AUTH_PORT: 8084
    ports:
      - "8083:8083"

  products:
    hostname: products
    image: products
    container_name: products
    restart: on-failure
    depends_on:
      - kafka
      - products-db
    ports:
      - "8081:8081"
    environment:
      POSTGRES_HOST: products-db
      POSTGRES_USER: benik
      POSTGRES_PASSWORD: 123
      POSTGRES_PORT: 5432
      KAFKA_HOST: kafka
      KAFKA_PORT: 9092
      CURRENT_HOST: client-account
      CURRENT_PORT: 8080
      AUTH_HOST: auth-valid-service
      AUTH_PORT: 8084
    links:
      - 'kafka'

  tariffs:
    hostname: tariffs
    image: tariffs
    container_name: tariffs
    restart: on-failure
    depends_on:
      - tariffs-db
      - kafka
    environment:
      POSTGRES_HOST: tariffs-db
      POSTGRES_USER: benik
      POSTGRES_PASSWORD: 123
      POSTGRES_PORT: 5432
      KAFKA_HOST: kafka
      KAFKA_PORT: 9092
      CURRENT_HOST: client-account
      CURRENT_PORT: 8080
      AUTH_HOST: auth-valid-service
      AUTH_PORT: 8084
    ports:
      - "8082:8082"

  client-account-db:
    image: postgres:14.1-alpine
    container_name: client-account-db
    restart: on-failure
    volumes:
      - 'client-account-data:/var/lib/postgresql/data'
    environment:
      POSTGRES_USER: benik
      POSTGRES_PASSWORD: 123
      POSTGRES_DB: client-account
    ports:
      - "5434:5432"

  validation-db:
    image: postgres:14.1-alpine
    container_name: validation-db
    restart: on-failure
    volumes:
      - 'validation-data:/var/lib/postgresql/data'
    environment:
      POSTGRES_USER: benik
      POSTGRES_PASSWORD: 123
      POSTGRES_DB: validation
    ports:
      - "5435:5432"

  client-account:
    hostname: client-account
    image: client-account
    container_name: client-account
    restart: on-failure
    depends_on:
      - validation-db
      - client-account-db
    environment:
      POSTGRES_HOST_CLIENT_ACCOUNT_DB: client-account-db
      POSTGRES_HOST_VALIDATION_DB: validation-db
      POSTGRES_USER: benik
      POSTGRES_PASSWORD: 123
      POSTGRES_PORT: 5432
      CURRENT_HOST: client-account
      CURRENT_PORT: 8080
      AUTH_HOST: auth-valid-service
      AUTH_PORT: 8084
    ports:
      - "8080:8080"

  auth-valid-service:
    hostname: auth-valid-service
    image: auth-valid-service
    container_name: auth-valid-service
    restart: on-failure
    depends_on:
      - auth-db
    environment:
      POSTGRES_HOST: auth-db
      POSTGRES_USER: benik
      POSTGRES_PASSWORD: 123
      POSTGRES_PORT: 5432
    ports:
      - "8084:8084"

  auth-db:
    image: postgres:14.1-alpine
    container_name: auth-db
    restart: on-failure
    volumes:
      - 'auth-db-data:/var/lib/postgresql/data'
    environment:
      POSTGRES_USER: benik
      POSTGRES_PASSWORD: 123
      POSTGRES_DB: auth
    ports:
      - "5436:5432"

volumes:
  tariffs-data:
  products-data:
  client-account-data:
  validation-data:
  auth-db-data:
  kafka-data: